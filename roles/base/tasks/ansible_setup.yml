- name: Ansible Setup | Update apt-cache
  ansible.builtin.apt:
    update_cache: yes
    cache_valid_time: 3600
  register: result
  until: result is succeeded
  # This task updates the apt package cache, ensuring it is refreshed.
  # The cache is considered valid for 3600 seconds (1 hour).
  # The task will retry until the cache update succeeds.

- name: Ansible Setup | Upgrade all packages
  ansible.builtin.apt:
    upgrade: yes
    state: latest
  when: unattended_upgrades
  # This task upgrades all installed packages on the system to their latest versions.
  # It only runs if the variable 'keep_packages_updated' is set to true.

- name: Ansible Setup | Ensure ansible is the latest version
  package:
    name: ansible
    state: latest
  # This task ensures that the latest version of Ansible is installed on the host.
  # It will upgrade Ansible if an older version is detected.

- name: Debug extra packages
  debug:
    msg: "Extra packages to be installed: {{ extra_packages }}"
  when: debugging

- name: Ansible Setup | Install required packages
  package:
    name: "{{ extra_packages }}"
    state: present
  # This task installs additional required packages for the playbook.
  # The packages are specified by the variables `dconf_package` and `python_psutil_package`.

- name: Ansible Setup | Install acl package
  package:
    name: acl
  when: ansible_distribution in ["Debian", "Pop!_OS", "Ubuntu"]
  # This task installs the 'acl' package, which is needed for managing access control lists.
  # It is only installed on Debian-based distributions, as it's already included in Arch Linux.

- name: Ansible Setup | Create ansible log file
  file:
    path: /var/log/ansible.log
    owner: erwin
    group: root
    mode: 0664
    state: touch
  changed_when: False
  # This task creates the Ansible log file at /var/log/ansible.log if it doesn't already exist.
  # The file is owned by the 'erwin' user and has permissions set to 0664.
  # The task does not report changes if the file already exists.

- name: Ansible Setup | Add logrotate config for ansible log file
  copy:
    src: files/ansible_setup/logrotate
    dest: /etc/logrotate.d/ansible
    owner: root
    group: root
    mode: 0644
  # This task installs a logrotate configuration file for the Ansible log.
  # The configuration file is copied to /etc/logrotate.d/ansible and sets up automatic log rotation.
  # The file is owned by root with permissions set to 0644.

- name: Ansible Setup | Remove default ansible directory (/etc/ansible) from host
  file:
    path: /etc/ansible
    state: absent
  # This task removes the default Ansible directory (/etc/ansible) if it exists.
  # This is useful if you want to avoid using the default configuration directory.

- name: "Ansible Setup | Set hostname to {{ hostname }}"
  ansible.builtin.hostname:
    name: "{{ hostname }}"
  # This task sets the hostname of the target machine to the value specified by the 'hostname' variable.
  # The 'ansible.builtin.hostname' module is used to change the system's hostname.

- name: Ansible Setup | Configure DNS servers in Netplan
  ansible.builtin.template:
    src: templates/netplan_config.j2
    dest: /etc/netplan/01-netcfg.yaml
    owner: root
    group: root
    mode: 0644
  notify: Apply Netplan
  when: ansible_distribution == "Ubuntu"
  tags: dns

- name: Ansible Setup | Backup existing resolv.conf
  ansible.builtin.command:
      cmd: cp /etc/resolv.conf /etc/resolv.conf.backup
  when: ansible_distribution != "Ubuntu"
  tags: dns

- name: Ansible Setup | Configure DNS servers in /etc/resolv.conf
  ansible.builtin.template:
    src: templates/resolv.conf.j2
    dest: /etc/resolv.conf
    owner: root
    group: root
    mode: 0644
  when: ansible_distribution != "Ubuntu"
  tags: dns
